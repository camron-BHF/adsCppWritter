project('AdsLib', 'cpp',
  version : '0.1',
  default_options : [
    'buildtype=release',
    'warning_level=3',
    'werror=true',
    'b_pie=true',
  ]
)

# some hardening options
add_project_arguments('-D_FORTIFY_SOURCE=2', language: 'cpp')
add_project_arguments(get_option('default_loglevel'), language: 'cpp')


# AdsLib source files
common_files = files([
  'AdsLib/AdsDef.cpp',
  'AdsLib/AdsDevice.cpp',
  'AdsLib/AdsFile.cpp',
  'AdsLib/AdsLib.cpp',
  'AdsLib/ECatAccess.cpp',
  'AdsLib/Frame.cpp',
  'AdsLib/LicenseAccess.cpp',
  'AdsLib/Log.cpp',
  'AdsLib/RTimeAccess.cpp',
  'AdsLib/RegistryAccess.cpp',
  'AdsLib/RouterAccess.cpp',
  'AdsLib/Sockets.cpp',
  'AdsLib/SymbolAccess.cpp',
  'AdsLib/bhf/ParameterList.cpp',
])

router_files = files([
  'AdsLib/standalone/AdsLib.cpp',
  'AdsLib/standalone/AmsConnection.cpp',
  'AdsLib/standalone/AmsNetId.cpp',
  'AdsLib/standalone/AmsPort.cpp',
  'AdsLib/standalone/AmsRouter.cpp',
  'AdsLib/standalone/NotificationDispatcher.cpp',
])

# Include directories
inc = include_directories([
  'AdsLib',
  'tools',
])

# Dependencies
libs = [
  meson.get_compiler('cpp').find_library('ws2_32', required: false),
  dependency('threads'),
]

# Create AdsLib static library
adslib = static_library('AdsLib',
  common_files,
  include_directories: inc,
  dependencies: libs,
  install: true,
)

# Declare AdsLib dependency
adslib_dep = declare_dependency(
  include_directories: inc,
  link_with: adslib,
)
 